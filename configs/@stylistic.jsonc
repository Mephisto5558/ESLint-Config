{
  // [STYLISTIC] https://eslint.style/packages/default#rules | Using "warn" wherever applicable
  "array-bracket-newline": [
    "warn",
    "consistent"
  ],
  "array-bracket-spacing": [
    "warn",
    "never",
    {
      "singleValue": false,
      "objectsInArrays": false,
      "arraysInArrays": false
    }
  ],
  "array-element-newline": "off",
  "arrow-parens": [
    "warn",
    "as-needed",
    {
      "requireForBlockBody": false
    }
  ],
  "arrow-spacing": [
    "warn",
    {
      "before": true,
      "after": true
    }
  ],
  "block-spacing": [
    "warn",
    "always"
  ],
  "brace-style": [
    "warn",
    "stroustrup",
    {
      "allowSingleLine": true
    }
  ],
  "comma-dangle": [
    "warn",
    "never"
  ],
  "comma-spacing": [
    "warn",
    {
      "before": false,
      "after": true
    }
  ],
  "comma-style": [
    "warn",
    "last",
    {
      "exceptions": {}
    }
  ],
  "computed-property-spacing": [
    "warn",
    "never",
    {
      "enforceForClassMembers": true
    }
  ],
  "curly-newline": "off", // Handled by `@stylistic/brace-style`
  "dot-location": [
    "warn",
    "property"
  ],
  "eol-last": [
    "warn",
    "never"
  ],
  "function-call-argument-newline": "off",
  "function-call-spacing": [
    "warn",
    "never"
  ],
  "function-paren-newline": [
    "warn",
    "consistent"
  ],
  "generator-star-spacing": [
    "warn",
    {
      "before": false,
      "after": true,
      "anonymous": {
        "before": false,
        "after": false
      }
    }
  ],
  "implicit-arrow-linebreak": [
    "warn",
    "beside"
  ],
  "indent": [
    "warn",
    2,
    {
      "ignoredNodes": [],
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "outerIIFEBody": 1,
      "MemberExpression": 1,
      "FunctionDeclaration": {
        "parameters": 1,
        "body": 1,
        "returnType": 1
      },
      "FunctionExpression": {
        "parameters": 1,
        "body": 1,
        "returnType": 1
      },
      "StaticBlock": {
        "body": 1
      },
      "CallExpression": {
        "arguments": 1
      },
      "ArrayExpression": 1,
      "ObjectExpression": 1,
      "ImportDeclaration": 1,
      "flatTernaryExpressions": true,
      "offsetTernaryExpressions": true,
      "offsetTernaryExpressionsOffsetCallExpressions": true,
      "ignoreComments": false,
      "tabLength": 2
    }
  ],
  "indent-binary-ops": [
    "warn",
    2
  ],
  "jsx-child-element-spacing": "",
  "jsx-closing-bracket-location": "",
  "jsx-closing-tab-location": "",
  "jsx-curly-brace-presence": "",
  "jsx-curly-newline": "",
  "jsx-curly-spacing": "",
  "jsx-equals-spacing": "",
  "jsx-fist-prop-new-line": "",
  "jsx-function-call-newline": "",
  "jsx-indent": "",
  "jsx-indent-props": "",
  "jsx-max-props-per-line": "",
  "jsx-newline": "",
  "jsx-one-expression-per-line": "",
  "jsx-pascal-case": "",
  "jsx-props-no-multi-spaces": "",
  "jsx-quotes": "",
  "jsx-self-closing-comp": "",
  "jsx-sort-props": "",
  "jsx-tag-spacing": "",
  "jsx-warp-multilines": "",
  "key-spacing": [
    "warn",
    {
      "beforeColon": false,
      "afterColon": true,
      "mode": "strict",
      // "align": ,
      "ignoredNodes": []
    }
  ],
  "keyword-spacing": [
    "warn",
    {
      "before": true,
      "after": true,
      "overrides": {}
    }
  ],
  "line-comment-position": "off",
  "linebreak-style": "off",
  "lines-around-comment": [
    // Todo: Allow comments after opening parentheses:
    // arr.sort(
    // /**
    // * @param {x}a
    // * @param {x}b */
    // (a, b) => b.abc - a.abc
    // )
    //
    // Todo: Allow comments after variable declaration:
    // let
    //   /** @type {x} */
    //   a,
    //   b
    "warn",
    {
      "beforeBlockComment": true,
      "afterBlockComment": false,
      "beforeLineComment": true,
      "afterLineComment": false,
      "allowBlockStart": true,
      "allowBlockEnd": false,
      "allowObjectStart": true,
      "allowObjectEnd": false,
      "allowArrayStart": true,
      "allowArrayEnd": false,
      "allowClassStart": true,
      "allowClassEnd": false,
      "allowEnumStart": true,
      "allowEnumEnd": false,
      "allowInterfaceStart": true,
      "allowInterfaceEnd": false,
      "allowModuleStart": true,
      "allowModuleEnd": false,
      "allowTypeStart": true,
      "allowTypeEnd": false,
      // "ignorePattern": ,
      "applyDefaultIgnorePatterns": true,
      "afterHashbangComment": true
    }
  ],
  "lines-between-class-members": [
    "warn",
    "always",
    {
      "exceptAfterSingleLine": true,
      "exceptAfterOverload": true
    }
  ],
  "max-len": [
    "warn",
    {
      "code": 150,
      "tabWidth": 2,
      // "comments": , // defaults to `code` value
      // "ignorePattern"
      "ignoreComments": false,
      "ignoreTrailingComments": false,
      "ignoreUrls": true,
      "ignoreStrings": false,
      "ignoreTemplateLiterals": false,
      "ignoreRegExpLiterals": false
    }
  ],
  "max-statements-per-line": [
    "warn",
    {
      "max": 1,
      "ignoredNodes": [
        "BreakStatement",
        "TryStatement",
        "FunctionDeclaration"
      ]
    }
  ],
  "member-delimiter-style": [
    "warn",
    {
      "multiline": {
        "delimiter": "semi",
        "requireLast": true
      },
      "singleline": {
        "delimiter": "semi",
        "requireLast": false
      },
      "multilineDetection": "brackets"
    }
  ],
  "multiline-comment-style": [
    "warn",
    "bare-block"
  ],
  "multiline-ternary": [
    "warn",
    "always-multiline",
    {
      "ignoreJSX": false
    }
  ],
  "new-parens": [
    "error",
    "always"
  ],
  "newline-per-chained-call": [
    "warn",
    {
      "ignoreChainWithDepth": 3
    }
  ],
  "no-confusing-arrow": [
    "warn",
    {
      "allowParens": true,
      "onlyOneSimpleParam": true
    }
  ],
  "no-extra-parens": [
    "warn",
    "all",
    {
      "conditionalAssign": false,
      "returnAssign": false,
      "nestedBinaryExpressions": false,
      "ternaryOperandBinaryExpressions": false,
      "ignoreJSX": "none",
      "enforceForArrowConditionals": false, // for compatibility with `@stylistic/no-confusing-arrow`
      "enforceForSequenceExpressions": true,
      "enforceForNewInMemberExpressions": true,
      "enforceForFunctionPrototypeMethods": true,
      // "allowParensAfterCommentPattern": 
      "nestedConditionalExpressions": false,
      "allowNodesInSpreadElement": {}
    }
  ],
  "no-extra-semi": "warn",
  "no-floating-decimal": "off", // Handled by `unicorn/no-zero-fractions`
  "no-mixed-operators": "off",
  "no-mixed-spaces-and-tabs": "warn",
  "no-multi-spaces": [
    "warn",
    {
      "ignoreEOLComments": false,
      "exceptions": {},
      "includeTabs": true
    }
  ],
  "no-multiple-empty-lines": [
    "error",
    {
      "max": 2,
      "maxBOF": 0
      // "maxEOF": 0 // Handled by `@stylistic/eol-last`
    }
  ],
  "no-tabs": [
    "warn",
    {
      "allowIndentationTabs": false
    }
  ],
  "no-trailing-spaces": [
    "warn",
    {
      "skipBlankLines": false,
      "ignoreComments": false
    }
  ],
  "no-whitespace-before-property": "warn",
  "nonblock-statement-body-position": "off", // Handled by `curly`
  "object-curly-newline": [
    "warn",
    {
      "consistent": true
    }
  ],
  "object-curly-spacing": [
    "warn",
    "always",
    {
      "arraysInObjects": true,
      "objectsInObjects": true
    }
  ],
  "object-property-newline": "off", // Not configurable enough
  "one-var-declaration-per-line": [
    "warn",
    "initializations"
  ],
  "operator-linebreak": [
    "warn",
    "before",
    {
      "overrides": {}
    }
  ],
  "padded-blocks": [
    "warn",
    "never",
    {
      "allowSingleLineBlocks": false
    }
  ],
  "padding-line-between-statements": "off",
  "quote-props": [
    "warn",
    "as-needed",
    {
      "keywords": false,
      "unnecessary": true,
      "numbers": true
    }
  ],
  "quotes": [
    "warn",
    "single",
    {
      "avoidEscape": true,
      "allowTemplateLiterals": "never",
      "ignoreStringLiterals": false
    }
  ],
  "rest-spread-spacing": [
    "warn",
    "never"
  ],
  "semi": [
    "warn",
    "always",
    {
      "omitLastInOneLineBlock": false,
      "omitLastInOneLineClassBody": false
    }
  ],
  "semi-spacing": [
    "warn",
    {
      "before": false,
      "after": true
    }
  ],
  "semi-style": [
    "warn",
    "last"
  ],
  "space-before-blocks": [
    "warn",
    "always"
  ],
  "space-before-function-paren": [
    "warn",
    {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always",
      "catch": "always"
    }
  ],
  "space-in-parens": [
    "warn",
    "never"
  ],
  "space-infix-ops": [
    "warn",
    {
      "int32Hint": false,
      "ignoreTypes": false
    }
  ],
  "space-unary-ops": [
    "warn",
    {
      "words": true,
      "nonwords": false,
      "overrides": {}
    }
  ],
  "spaced-comment": [
    "warn",
    "always",
    {
      "exceptions": [],
      "markers": [],
      "block": {
        "balanced": true
      }
    }
  ],
  "switch-colon-spacing": [
    "warn",
    {
      "before": false,
      "after": true
    }
  ],
  "template-curly-spacing": [
    "warn",
    "never"
  ],
  "template-tag-spacing": [
    "warn",
    "never"
  ],
  "type-annotation-spacing": [
    "warn",
    {
      "before": false,
      "after": true,
      "overrides": {
        "arrow": {
          "before": true,
          "after": true
        }
      }
    }
  ],
  "type-generic-spacing": "warn",
  "type-named-tuple-spacing": "warn",
  "wrap-iife": [
    "warn",
    "inside",
    {
      "functionPrototypeMethods": true
    }
  ],
  "wrap-regex": "off",
  "yield-star-spacing": [
    "warn",
    {
      "before": false,
      "after": true
    }
  ]
}