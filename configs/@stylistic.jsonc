{
  // [STYLISTIC] https://eslint.style/packages/default#rules
  "array-bracket-newline": [
    "error",
    "consistent"
  ],
  "array-bracket-spacing": [
    "error",
    "never",
    {
      "singleValue": false,
      "objectsInArrays": false,
      "arraysInArrays": false
    }
  ],
  "array-element-newline": "off",
  "arrow-parens": [
    "error",
    "as-needed",
    {
      "requireForBlockBody": false
    }
  ],
  "arrow-spacing": [
    "error",
    {
      "before": true,
      "after": true
    }
  ],
  "block-spacing": [
    "error",
    "always"
  ],
  "brace-style": [
    "error",
    "stroustrup",
    {
      "allowSingleLine": true
    }
  ],
  "comma-dangle": [
    "error",
    "never"
  ],
  "comma-spacing": [
    "error",
    {
      "before": false,
      "after": true
    }
  ],
  "comma-style": [
    "error",
    "last"
  ],
  "computed-property-spacing": [
    "error",
    "never"
  ],
  "curly-newline": "off", // Handled by `@stylistic/brace-style`
  "dot-location": [
    "error",
    "property"
  ],
  "eol-last": [
    "error",
    "never"
  ],
  "function-call-argument-newline": "off",
  "function-call-spacing": [
    "error",
    "never"
  ],
  "function-paren-newline": [
    "error",
    "consistent"
  ],
  "generator-star-spacing": [
    "error",
    {
      "before": false,
      "after": true,
      "anonymous": {
        "before": false,
        "after": false
      }
    }
  ],
  "implicit-arrow-linebreak": [
    "error",
    "beside"
  ],
  "indent": [
    "error",
    2,
    {
      "SwitchCase": 1
    }
  ],
  "indent-binary-ops": [
    "error",
    2
  ],
  "key-spacing": [
    "error",
    {
      "beforeColon": false,
      "afterColon": true,
      "mode": "strict"
    }
  ],
  "keyword-spacing": [
    "error",
    {
      "before": true,
      "after": true
    }
  ],
  "line-comment-position": "off",
  "linebreak-style": "off",
  "lines-around-comment": [
    // Todo: Allow comments after opening parentheses:
    // arr.sort(
    // /**
    // * @param {x}a
    // * @param {x}b */
    // (a, b) => b.abc - a.abc
    // )
    "error",
    {
      "beforeBlockComment": true,
      "afterBlockComment": false,
      "beforeLineComment": true,
      "afterLineComment": false,
      "allowBlockStart": true,
      "allowBlockEnd": false,
      "allowClassStart": true,
      "allowClassEnd": false,
      "allowObjectStart": true,
      "allowObjectEnd": false,
      "allowArrayStart": true,
      "allowArrayEnd": false,
      "allowEnumStart": true,
      "allowEnumEnd": false,
      "allowInterfaceStart": true,
      "allowInterfaceEnd": false,
      "allowModuleStart": true,
      "allowModuleEnd": false,
      "allowTypeStart": true,
      "allowTypeEnd": false
    }
  ],
  "lines-between-class-members": [
    "error",
    "always",
    {
      "exceptAfterSingleLine": true
    }
  ],
  "max-len": [
    "error",
    200
  ],
  "max-statements-per-line": "off",
  "multiline-comment-style": [
    "error",
    "bare-block"
  ],
  "multiline-ternary": [
    "error",
    "always-multiline"
  ],
  "new-parens": [
    "error",
    "always"
  ],
  "newline-per-chained-call": [
    "error",
    {
      "ignoreChainWithDepth": 3
    }
  ],
  "no-confusing-arrow": "off",
  "no-extra-parens": [
    "error",
    "all",
    {
      "nestedBinaryExpressions": false
    }
  ],
  "no-extra-semi": "error",
  "no-floating-decimal": "off", // Does not support only disallowing trailing dots
  "no-mixed-operators": "off",
  "no-mixed-spaces-and-tabs": "error",
  "no-multi-spaces": "error",
  "no-multiple-empty-lines": [
    "error",
    {
      "max": 2,
      "maxBOF": 0 // Beginning Of File
    }
  ],
  "no-tabs": "error",
  "no-trailing-spaces": "warn",
  "no-whitespace-before-property": "error",
  "nonblock-statement-body-position": "off",
  "object-curly-newline": [
    "error",
    {
      "ObjectExpression": {
        "consistent": true
      },
      "ObjectPattern": {
        "multiline": true
      },
      "ImportDeclaration": {
        "consistent": true
      },
      "ExportDeclaration": {
        "consistent": true
      }
    }
  ],
  "object-curly-spacing": [
    "error",
    "always"
  ],
  "object-property-newline": "off", // Not configurable enough
  "one-var-declaration-per-line": [
    "error",
    "initializations"
  ],
  "operator-linebreak": [
    "error",
    "before"
  ],
  "padded-blocks": [
    "warn",
    "never",
    {
      "allowSingleLineBlocks": false
    }
  ],
  "padding-line-between-statements": "off",
  "quote-props": [
    "error",
    "as-needed",
    {
      "unnecessary": true,
      "numbers": true
    }
  ],
  "quotes": [
    "warn",
    "single",
    {
      "avoidEscape": true
    }
  ],
  "rest-spread-spacing": [
    "error",
    "never"
  ],
  "semi": [
    "error",
    "always"
  ],
  "semi-spacing": [
    "error",
    {
      "before": false
    }
  ],
  "semi-style": [
    "error",
    "last"
  ],
  "space-before-blocks": [
    "error",
    "always"
  ],
  "space-before-function-paren": [
    "error",
    {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }
  ],
  "space-in-parens": [
    "warn",
    "never"
  ],
  "space-infix-ops": "error",
  "space-unary-ops": [
    "error",
    {
      "words": true,
      "nonwords": false
    }
  ],
  "spaced-comment": [
    "error",
    "always"
  ],
  "switch-colon-spacing": [
    "error",
    {
      "after": true,
      "before": false
    }
  ],
  "template-curly-spacing": [
    "error",
    "never"
  ],
  "template-tag-spacing": [
    "error",
    "never"
  ],
  "wrap-iife": [
    "error",
    "inside",
    {
      "functionPrototypeMethods": true
    }
  ],
  "wrap-regex": "off",
  "yield-star-spacing": [
    "error",
    {
      "before": false,
      "after": true
    }
  ]
}